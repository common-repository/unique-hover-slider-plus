{"version":3,"sources":["colors.js","jqColorPicker.js","script.js"],"names":["root","factory","exports","module","define","amd","Colors","this","window","undefined","setColor","colors","color","type","save","alpha","ColorConverter","txt2color","_colors","n","limitValue","_valueRanges","convertColors","saveAsBackground","RGB","rgb","grey","_instance","options","r","g","b","equivalentGrey","_round","rgbaMixBlack","mixColors","rgbaMixWhite","luminance","getLuminance","customBG","rgbaMixCustom","colorObj","modes","SAVE","SMART","convert","ranges","RND","mode","from","exceptions","hsl","typ","HEX","RGB2HEX","webSave","getClosestWebColor","webSmart","saveColor","hueRGB","hue2RGB","hsv","h","background","rgbaMixBGMixCustom","WCAG2Ratio","getWCAG2Ratio","luminanceDelta","_Math","abs","hueDelta","getHueDelta","RGBLuminance","HUELuminance","convertCallback","val","out","tmp","half","rgb1","rgb2","nominal","max","normalized","div","i","length","pow","topColor","bottomColor","topAlpha","bottomAlpha","newColor","alphaTop","alphaBottom","a","lum1","lum2","ratio","value","min","s","v","l","Math","round","valueRanges","initInstance","THIS","_options","focusInstance","option","prototype","newCol","setCustomBackground","col","toString","colorMode","forceAlpha","color2text","toLowerCase","txt","parts","replace","split","values","substr","m","charAt","HEX2rgb","hasAlpha","HSL","shouldBeHex","isHex","isRgb","innerText","toUpperCase","hue","mod","rgb2hsv","chroma","k","hsv2rgb","f","p","q","t","hsv2hsl","rgb2hsl","dependent","hsl2rgb","sv","sextant","fract","vsf","require","jQuery","$","extractValue","elm","getAttribute","css","resolveEventType","event","originalEvent","touches","findElement","$elm","find","doRender","toggle","$this","position","offset","$window","gap","_$trigger","_colorMode","data","_colorPicker","$trigger","_$UI","build","positionCallback","call","left","_left","_width","scrollLeft","width","top","_top","outerHeight","_height","scrollTop","height","show","animationSpeed","_$alpha","opacity","_$xy_slider","_$z_slider","_color","preRender","off","on","_pointerdown","pointerdown","hide","append","_css","cssAddon","_html","margin","appendTo","$UI","_GPU","GPU","_$xy_cursor","_$z_cursor","_$alpha_cursor","buildCallback","prepend","children","eq","offsetWidth","offsetHeight","e","action","className","button","which","preventDefault","returnValue","_offset","xy_slider","z_slider","$document","_pointerup","_pointermove","x","pageX","y","pageY","z","toggled","dark","light","colorText","HUEContrast","alphaContrast","translate3d","triggerValue","hasNoValue","hasAttribute","backgroundColor","transform","borderColor","text","render","_animate","renderCallback","document","requestAnimationFrame","webkitRequestAnimationFrame","cb","ColorPicker","fn","colorPicker","_this","noop","extend","body","scrollResize","add","target","filter","each","attr","preventFocus","background-color","destroy"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,SACAC,OAAAD,QAAAD,EAAAD,GACA,kBAAAI,SAAAA,OAAAC,IACAD,OAAA,YAAA,WACA,MAAAH,GAAAD,KAGAA,EAAAM,OAAAL,EAAAD,IAEAO,KAAA,SAAAC,EAAAC,GACA,YAqFA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA,gBAAAH,GAAA,CACA,GAAAA,GAAAI,EAAAC,UAAAL,EACAC,GAAAD,EAAAC,KACAK,EAAAL,GAAAD,EAAAC,GACAE,EAAAA,IAAAN,EAAAM,EAAAH,EAAAG,UACA,IAAAH,EACA,IAAA,GAAAO,KAAAP,GACAD,EAAAE,GAAAM,GAAAC,EAAAR,EAAAO,GAAAE,EAAAR,GAAAM,GAAA,GAAA,EAAA,EAMA,OAHAJ,KAAAN,IACAE,EAAAI,MAAAK,GAAAL,EAAA,EAAA,IAEAO,EAAAT,EAAAC,EAAAH,EAAAF,GAGA,QAAAc,GAAAC,EAAAC,EAAAV,GACA,GAAAW,GAAAC,EAAAC,QAAAF,KACAd,IAmBA,OAjBAA,GAAAY,KAAAK,EAAAL,EAAAK,EAAAC,EAAAN,EAAAM,EAAAC,EAAAP,EAAAO,GACAnB,EAAAa,KAAAI,EAAAJ,EAAAI,EAAAC,EAAAL,EAAAK,EAAAC,EAAAN,EAAAM,GACAnB,EAAAG,MAAAA,EAEAH,EAAAoB,eAAAC,EAAAP,EAAAG,EAAAL,EAAAK,EAAAH,EAAAI,EAAAN,EAAAM,EAAAJ,EAAAK,EAAAP,EAAAO,GAEAnB,EAAAsB,aAAAC,EAAAV,GAAAI,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAhB,EAAA,GACAH,EAAAwB,aAAAD,EAAAV,GAAAI,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAhB,EAAA,GACAH,EAAAsB,aAAAG,UAAAC,EAAA1B,EAAAsB,cAAA,GACAtB,EAAAwB,aAAAC,UAAAC,EAAA1B,EAAAwB,cAAA,GAEAT,EAAAC,QAAAW,WACA3B,EAAA4B,cAAAL,EAAAV,EAAAE,EAAAC,QAAAW,SAAAxB,EAAA,GACAH,EAAA4B,cAAAH,UAAAC,EAAA1B,EAAA4B,eAAA,GACAb,EAAAC,QAAAW,SAAAF,UAAAC,EAAAX,EAAAC,QAAAW,UAAA,IAGA3B,EAGA,QAAAU,GAAAT,EAAA4B,GAEA,GAMAC,GAEAC,EAAAC,EARAjC,EAAA8B,GAAAvB,EACA2B,EAAA7B,EACAY,EAAAD,EAAAC,QACAkB,EAAAzB,EACA0B,EAAApC,EAAAoC,IAEAC,EAAA,GAAAC,EAAA,GACAC,GAAAC,IAAA,MAAA1B,IAAAZ,GACAW,EAAAuB,EAAAtB,GAEA,IAAA,UAAAZ,EAAA,CACA,IAAA,GAAAuC,KAAAN,GACA,IAAAA,EAAAM,GAAAA,GAAA,CACAvC,IAAAuC,IACAH,EAAAC,EAAAE,IAAA,MACAzC,EAAAyC,GAAAP,EAAAI,EAAA,IAAAG,GAAAzC,EAAAsC,KAGAF,EAAAK,KAAAL,EAAAK,OACAV,EAAA/B,EAAAyC,EACA,KAAAJ,IAAAN,GACAK,EAAAK,GAAAJ,GAAAf,EAAAS,EAAAM,GAAAF,EAAAM,GAAAJ,GAAA,IAKAxB,EAAAuB,EAAAtB,IACAd,EAAA0C,IAAAR,EAAAS,QAAA9B,GACAb,EAAAqB,eACAJ,EAAAF,KAAAG,EAAAlB,EAAAc,IAAAI,EACAD,EAAAF,KAAAI,EAAAnB,EAAAc,IAAAK,EACAF,EAAAF,KAAAK,EAAApB,EAAAc,IAAAM,EACApB,EAAA4C,QAAAZ,EAAAa,EAAAhC,EAAA,IAEAb,EAAA8C,SAAAb,EAAAY,EAAAhC,EAAA,IAEAb,EAAA+C,UACAlC,EAAAK,IAAAc,EAAAd,GAAAL,EAAAM,IAAAa,EAAAb,GAAAN,EAAAO,IAAAY,EAAAZ,EAAA,WACAP,EAAAK,IAAAe,EAAAf,GAAAL,EAAAM,IAAAc,EAAAd,GAAAN,EAAAO,IAAAa,EAAAb,EAAA,YAAA,GACApB,EAAAgD,OAAA3C,EAAA4C,QAAAjD,EAAAkD,IAAAC,GAEArB,IACA9B,EAAAoD,WAAAxC,EAAAC,EAAAb,EAAAc,IAAAd,EAAAI,QAIA,GAIAmB,GAAAE,EACA4B,EALAvC,EAAAd,EAAAc,IACAV,EAAAJ,EAAAI,MACAsB,EAAA,YACA0B,EAAApD,EAAAoD,UAmCA,OA/BA7B,GAAAC,EAAAV,GAAAI,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAhB,EAAA,GACAmB,EAAAG,GAAAC,EAAAJ,GAAA,GACAvB,EAAAuB,aAAAA,EAEAE,EAAAD,EAAAV,GAAAI,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAhB,EAAA,GACAqB,EAAAC,GAAAC,EAAAF,GAAA,GACAzB,EAAAyB,aAAAA,EAEAR,EAAAW,WACAyB,EAAA7B,EAAAV,EAAAsC,EAAAvB,cAAAzB,EAAA,GACAiD,EAAA3B,GAAAC,EAAA0B,GAAA,GACAA,EAAAC,WAAAC,EAAAF,EAAA3B,GACA0B,EAAAvB,cAAAH,IACA1B,EAAAqD,mBAAAA,EAEAA,EAAAG,eAAAC,EAAAC,IACAL,EAAA3B,GAAA0B,EAAAvB,cAAAH,IACA2B,EAAAM,SAAAC,EAAAR,EAAAvB,cAAAwB,GAAA,IAIArD,EAAA6D,aAAAlC,EAAAd,GACAb,EAAA8D,aAAAnC,EAAA3B,EAAAgD,QAGA/B,EAAA8C,iBACA9C,EAAA8C,gBAAA/D,EAAAE,GAKAF,EA4KA,QAAA6C,GAAAhC,EAAAmD,GACA,GAAAC,MACAC,EAAA,EACAC,EAAAH,EAAA,CAEA,KAAA,GAAAxD,KAAAK,GACAqD,EAAArD,EAAAL,GAAAwD,EACAC,EAAAzD,GAAAK,EAAAL,IAAA0D,EAAAC,EAAAH,EAAAE,GAAAA,EAEA,OAAAD,GAGA,QAAAL,GAAAQ,EAAAC,EAAAC,GACA,OAAAb,EAAAc,IAAAH,EAAAlD,EAAAmD,EAAAnD,EAAAmD,EAAAnD,EAAAkD,EAAAlD,GACAuC,EAAAc,IAAAH,EAAAjD,EAAAkD,EAAAlD,EAAAkD,EAAAlD,EAAAiD,EAAAjD,GACAsC,EAAAc,IAAAH,EAAAhD,EAAAiD,EAAAjD,EAAAiD,EAAAjD,EAAAgD,EAAAhD,KAAAkD,EAAA,IAAA,GAAA,IAGA,QAAA3C,GAAAb,EAAA0D,GAKA,IAAA,GAJAC,GAAAD,EAAA,EAAA,IACA3D,GAAAC,EAAAI,EAAAuD,EAAA3D,EAAAK,EAAAsD,EAAA3D,EAAAM,EAAAqD,GACA/C,EAAAV,EAAAC,QAAAS,UAEAgD,EAAA7D,EAAA8D,OAAAD,KACA7D,EAAA6D,GAAA7D,EAAA6D,IAAA,OAAA7D,EAAA6D,GAAA,MAAAjB,EAAAmB,KAAA/D,EAAA6D,GAAA,MAAA,MAAA,IAEA,OAAAhD,GAAAR,EAAAL,EAAA,GAAAa,EAAAP,EAAAN,EAAA,GAAAa,EAAAN,EAAAP,EAAA,GAGA,QAAAW,GAAAqD,EAAAC,EAAAC,EAAAC,GACA,GAAAC,MACAC,EAAAH,IAAAjF,EAAAiF,EAAA,EACAI,EAAAH,IAAAlF,EAAAkF,EAAA,EACA5E,EAAA8E,EAAAC,GAAA,EAAAD,EAEA,KAAA,GAAA1E,KAAAqE,GACAI,EAAAzE,IAAAqE,EAAArE,GAAA0E,EAAAJ,EAAAtE,GAAA2E,GAAA,EAAAD,IAAA9E,CAGA,OADA6E,GAAAG,EAAAhF,EACA6E,EAGA,QAAA1B,GAAA8B,EAAAC,GACA,GAAAC,GAAA,CAOA,OAJAA,GADAF,GAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,KAEA/D,EAAA,IAAAiE,GAAA,IAGA,QAAA9E,GAAA+E,EAAAC,EAAAlB,GAEA,MAAAiB,GAAAjB,EAAAA,EAAAiB,EAAAC,EAAAA,EAAAD,EArbA,GAAA9E,IACAI,KAAAI,GAAA,EAAA,KAAAC,GAAA,EAAA,KAAAC,GAAA,EAAA,MACA8B,KAAAC,GAAA,EAAA,KAAAuC,GAAA,EAAA,KAAAC,GAAA,EAAA,MACAnD,KAAAW,GAAA,EAAA,KAAAuC,GAAA,EAAA,KAAAE,GAAA,EAAA,MACAxF,OAAAA,OAAA,EAAA,IACAsC,KAAAA,KAAA,EAAA,YAGAe,EAAA5D,EAAAgG,KACAvE,EAAAmC,EAAAqC,MAEA9E,KACAT,KAEAQ,GAAAG,EAAA,QAAAC,EAAA,QAAAC,EAAA,SACAM,GAAAR,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAEAzB,EAAA,SAAAsB,GACArB,KAAAI,QAAAoC,QACAxC,KAAAqB,SACAhB,MAAA,gBACAc,KAAAA,EACAW,UAAAA,EACAqE,YAAArF,GAKAsF,EAAApG,KAAAqB,QAEA+E,EAAA,SAAAC,EAAAhF,GACA,GAEAW,GADAsE,EAAAD,EAAAhF,OAGAkF,GAAAF,EACA,KAAA,GAAAG,KAAAnF,GACAA,EAAAmF,KAAAtG,IAAAoG,EAAAE,GAAAnF,EAAAmF,GAEAxE,GAAAsE,EAAAtE,SACAsE,EAAAtE,SAAA,gBAAAA,GAAAvB,EAAAC,UAAAsB,GAAAd,IAAAc,EACArB,EAAAR,EAAAkG,EAAAjG,OAAAkG,EAAAjG,MAAAH,GAAA,IAEAqG,EAAA,SAAAF,GACAjF,IAAAiF,IACAjF,EAAAiF,EACA1F,EAAA0F,EAAAjG,QAIAL,GAAA0G,UAAAtG,SAAA,SAAAuG,EAAApG,EAAAE,GAEA,MADA+F,GAAAvG,MACA0G,EACAvG,EAAAH,KAAAI,OAAAsG,EAAApG,EAAAJ,EAAAM,IAEAA,IAAAN,IACAF,KAAAI,OAAAI,MAAAK,EAAAL,EAAA,EAAA,IAEAO,EAAAT,KAIAP,EAAA0G,UAAAE,oBAAA,SAAAC,GAIA,MAHAL,GAAAvG,MACAA,KAAAqB,QAAAW,SAAA,gBAAA4E,GAAAnG,EAAAC,UAAAkG,GAAA1F,IAAA0F,EAEAzG,EAAAH,KAAAI,OAAAF,EAAA,QAGAH,EAAA0G,UAAAzF,iBAAA,WAGA,MAFAuF,GAAAvG,MAEAG,EAAAH,KAAAI,OAAAF,EAAA,OAAA,IAGAH,EAAA0G,UAAAI,SAAA,SAAAC,EAAAC,GACA,MAAAtG,GAAAuG,YAAAF,GAAA,OAAAG,cAAAjH,KAAAI,OAAA2G,GA8IA,IAAAtG,IACAC,UAAA,SAAAwG,GACA,GAAA7G,MACA8G,EAAAD,EAAAE,QAAA,cAAA,IAAAC,MAAA,KACAC,GAAAH,EAAA,IAAA,IAAAE,MAAA,QACA/G,EAAA6G,EAAA,GAAAA,EAAA,GAAAI,OAAA,EAAA,GAAA,MACAC,EAAA,EAIA,IAFAnH,EAAAC,KAAAA,EACAD,EAAAC,MACA6G,EAAA,GACA,IAAA,GAAAvG,GAAA,EAAAA,KACA4G,EAAAlH,EAAAM,IAAAN,EAAAmH,OAAA7G,GACAP,EAAAC,GAAAkH,IAAAF,EAAA1G,GAAAE,EAAAR,GAAAkH,GAAA,OAGAnH,GAAAa,IAAAT,EAAAiH,QAAAP,EAAA,GAKA,OAFA9G,GAAAG,MAAA8G,EAAA,IAAAA,EAAA,GAAA,EAEAjH,GAGA2G,WAAA,SAAAF,EAAA1G,EAAA2G,GACA,GAAAvG,GAAAuG,KAAA,GAAArF,EAAA,IAAAtB,EAAAI,OAAA,IACAmH,EAAA,gBAAAnH,IACAuG,KAAA,IAAAA,GAAA,IAAAvG,GACAS,EAAAb,EAAAoC,IAAAtB,IACA0G,EAAAxH,EAAAoC,IAAAI,IACAiF,EAAA,QAAAf,GAAAa,EACAG,EAAA,QAAAhB,IAAAe,EACAE,EAAA,QAAAjB,GAAAe,EACAG,EAAAD,EAAA9G,EAAAK,EAAA,KAAAL,EAAAM,EAAA,KAAAN,EAAAO,EACAsG,EACA,IAAA1H,EAAA0C,IADA8E,EAAArE,EAAA,KAAAqE,EAAA9B,EAAA,MAAA8B,EAAA5B,EAAA,GAGA,OAAA8B,GAAAE,GAAAH,EAAA,MAAAf,IACAa,EAAA,IAAA,IAAA,IAAAK,GACAL,EAAA,KAAAnH,EAAA,IAAA,KAGAuC,QAAA,SAAA9B,GACA,QACAA,EAAAK,EAAA,GAAA,IAAA,IAAAL,EAAAK,EAAAuF,SAAA,KACA5F,EAAAM,EAAA,GAAA,IAAA,IAAAN,EAAAM,EAAAsF,SAAA,KACA5F,EAAAO,EAAA,GAAA,IAAA,IAAAP,EAAAO,EAAAqF,SAAA,KACAoB,eAGAP,QAAA,SAAA5E,GAEA,MADAA,GAAAA,EAAAuE,MAAA,KAEA/F,IAAA,KAAAwB,EAAA,GAAAA,EAAAA,EAAA,GAAA,EAAA,IAAA,IACAvB,IAAA,KAAAuB,EAAAA,EAAA,GAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAA,IACAtB,IAAA,MAAAsB,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAA,MAIAO,QAAA,SAAA6E,GACA,GAAA3E,GAAA,EAAA2E,EACAC,IAAA5E,EAAA,EACAuB,EAAA,IAAAvB,EAAA,EAAAA,EAAA4E,CAEA,QACA7G,EAAAI,EAAA,KAAA,EAAA,EAAAoD,EAAA,EAAA,EAAAA,EAAA,GAAAqD,IACA5G,EAAAG,EAAA,KAAAoD,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,GAAAqD,IACA3G,EAAAE,EAAA,KAAA,EAAA,EAAAoD,EAAA,EAAA,EAAA,EAAAA,GAAAqD,MAMAC,QAAA,SAAAlH,GACA,GAGAmH,GAAAxC,EAAAC,EAHAxE,EAAAJ,EAAAI,EACAC,EAAAL,EAAAK,EACAC,EAAAN,EAAAM,EACA8G,EAAA,CAcA,OAZA/G,GAAAC,IACAD,EAAAC,GAAAA,EAAAD,EAAA,GACA+G,MAEAzC,EAAArE,EACAF,EAAAC,IACAD,EAAAC,GAAAA,EAAAD,EAAA,GACAgH,KAAA,EAAAA,EACAzC,EAAAhC,EAAAgC,IAAAtE,EAAAC,IAEA6G,EAAA/G,EAAAuE,EACAC,EAAAxE,EAAA+G,EAAA/G,EAAA,GAEAiC,EAAAuC,EAAA,MAAAnF,GAAAA,EAAAiC,KAAAjC,EAAAiC,IAAAW,GAAA,EACA8E,EAAAxE,EAAAC,IAAAwE,GAAA/G,EAAAC,IAAA,EAAA6G,IAAA,EACAvC,EAAAxE,EAAA+G,EAAA/G,EAAAX,GAAAA,EAAA2C,KAAA3C,EAAA2C,IAAAwC,GAAA,EACAC,EAAAzE,IAIAiH,QAAA,SAAAjF,GACA,GAAAC,GAAA,EAAAD,EAAAC,EACAuC,EAAAxC,EAAAwC,EACAC,EAAAzC,EAAAyC,EACAjB,IAAAvB,EACAiF,EAAAjF,EAAAuB,EACA2D,EAAA1C,GAAA,EAAAD,GACA4C,EAAA3C,GAAA,EAAAyC,EAAA1C,GACA6C,EAAA5C,GAAA,GAAA,EAAAyC,GAAA1C,GACAqC,EAAArD,EAAA,CAEA,QACAxD,GAAAyE,EAAA2C,EAAAD,EAAAA,EAAAE,EAAA5C,GAAAoC,GACA5G,GAAAoH,EAAA5C,EAAAA,EAAA2C,EAAAD,EAAAA,GAAAN,GACA3G,GAAAiH,EAAAA,EAAAE,EAAA5C,EAAAA,EAAA2C,GAAAP,KAMAS,QAAA,SAAAtF,GACA,GAAA0C,IAAA,EAAA1C,EAAAwC,GAAAxC,EAAAyC,EACAD,EAAAxC,EAAAwC,EAAAxC,EAAAyC,CAIA,OAFAD,GAAAxC,EAAAwC,EAAAE,EAAA,EAAAA,EAAAF,EAAAE,EAAA,EAAAF,GAAA,EAAAE,GAAA,GAGAzC,EAAAD,EAAAC,EACAuC,EAAAxC,EAAAyC,GAAAD,EAAAA,EAAAnF,GAAAA,EAAAiC,KAAAjC,EAAAiC,IAAAkD,GAAA,EACAE,EAAAA,EAAA,IAIA6C,QAAA,SAAA3H,EAAA4H,GACA,GAAAxF,GAAA7C,EAAA2H,QAAAlH,EAEA,OAAAT,GAAAmI,QAAAE,EAAAxF,EAAA3C,EAAA2C,IAAAA,IAGAyF,QAAA,SAAAnG,GACA,GAAAW,GAAA,EAAAX,EAAAW,EACAuC,EAAAlD,EAAAkD,EACAE,EAAApD,EAAAoD,EACAD,EAAAC,EAAA,GAAAA,GAAA,EAAAF,GAAAE,EAAAF,EAAAA,EAAAE,EACAwB,EAAAxB,EAAAA,EAAAD,EACAiD,EAAAjD,GAAAA,EAAAyB,GAAAzB,EAAA,EACAkD,IAAA1F,EACA2F,EAAA3F,EAAA0F,EACAE,EAAApD,EAAAiD,EAAAE,EACAP,EAAAnB,EAAA2B,EACAT,EAAA3C,EAAAoD,EACAhB,EAAAc,EAAA,CAEA,QACA3H,GAAAyE,EAAA2C,EAAAlB,EAAAA,EAAAmB,EAAA5C,GAAAoC,GACA5G,GAAAoH,EAAA5C,EAAAA,EAAA2C,EAAAlB,EAAAA,GAAAW,GACA3G,GAAAgG,EAAAA,EAAAmB,EAAA5C,EAAAA,EAAA2C,GAAAP,KAmEA,OAAApI,KCrcA,SAAAN,EAAAC,GACA,gBAAAC,SACAC,OAAAD,QAAAD,EAAAD,EAAA2J,QAAA,UAAAA,QAAA,WACA,kBAAAvJ,SAAAA,OAAAC,IACAD,QAAA,SAAA,UAAA,SAAAwJ,EAAAtJ,GACA,MAAAL,GAAAD,EAAA4J,EAAAtJ,KAGAL,EAAAD,EAAAA,EAAA4J,OAAA5J,EAAAM,SAEAC,KAAA,SAAAC,EAAAqJ,EAAAvJ,EAAAG,GACA,YAqDA,SAAAqJ,GAAAC,GACA,MAAAA,GAAA5D,OAAA4D,EAAAC,aAAA,UACAH,EAAAE,GAAAE,IAAA,qBAAA,OAGA,QAAAC,GAAAC,GAIA,MAHAA,GAAAA,EAAAC,eAAAD,EAAAC,cAAAC,QACAF,EAAAC,cAAAC,QAAA,GAAAF,EAEAA,EAAAC,cAAAD,EAAAC,cAAAD,EAGA,QAAAG,GAAAC,GACA,MAAAV,GAAAU,EAAAC,KAAA3D,EAAA4D,UAAA,IAAAF,EAAA,IAGA,QAAAG,GAAAP,GACA,GAAAQ,GAAAd,EAAAtJ,MACAqK,EAAAD,EAAAE,SACAC,EAAAjB,EAAArJ,GACAuK,EAAAlE,EAAAkE,GAEAZ,IACAa,EAAAV,EAAAK,GACAK,EAAAC,WAAAD,EAAAE,KAAA,aAEAC,EAAAC,SAAAT,GAEAU,GAAAC,KAAArB,IACApD,EAAA0E,iBAAAC,KAAAL,EAAAR,KACAc,MAAAJ,EAAAK,MAAAd,EAAAa,QACAJ,EAAAK,OAAAL,EAAAM,QACAb,EAAAc,aAAAd,EAAAe,UAAAd,EAAA,EACAM,EAAAK,MAAAX,EAAA,GACAe,KAAAT,EAAAU,KAAAnB,EAAAkB,IAAAnB,EAAAqB,iBACAX,EAAAU,MAAAV,EAAAY,SACAnB,EAAAoB,YAAApB,EAAAqB,WAAApB,EAAA,EACAM,EAAAU,KAAAhB,EAAA,KACAqB,KAAAvF,EAAAwF,eAAA,WACAlC,KAAA,IAGAmC,EAAA5B,SAAA7D,EAAA0F,SAAAZ,OAAAW,EAAAT,QACAW,EAAAb,OAAAa,EAAAX,QACAW,EAAAP,QAAAO,EAAAL,SACAM,EAAAR,QAAAQ,EAAAN,SACAO,EAAAhM,SAAAoJ,EAAAkB,EAAA,KAEA2B,GAAA,MAEAC,IAAA,QAAAC,GAAAC,EACA,uCAAAC,IACA5B,EAAAC,UACAvB,EAAAwB,GAAA2B,KAAAnG,EAAAwF,eAAA,WACAM,GAAA,GACAxB,EAAAC,SAAA,OACAwB,IAAA,QAIA,QAAAtB,KAIA,MAHAzB,GAAA,QAAAoD,OAAA,sDACApG,EAAAoD,KAAAiD,IAAArG,EAAAsG,UAAA,IAAA,YAEAtD,EAAAuD,GAAAnD,KAAAoD,OAAAxG,EAAAwG,SACAC,SAAA,QACAlB,KAAA,EAAA,WACAjB,EAAAoC,IAAAlC,EAAAxB,EAAAtJ,MAEAiN,EAAA3G,EAAA4G,KAAApC,EAAApB,IAAA,iBAAAxJ,EACAgM,EAAA5C,EAAA,eAAAtJ,MACAiM,EAAA3C,EAAA,gBAAAtJ,MACAmN,EAAA7D,EAAA,gBAAAtJ,MACAoN,EAAA9D,EAAA,eAAAtJ,MACA+L,EAAAzC,EAAA,YAAAtJ,MACAqN,EAAA/D,EAAA,mBAAAtJ,MACAsG,EAAAgH,cAAArC,KAAAL,EAAAE,GACAA,EAAAyC,QAAA,SAAAC,WAAAC,GAAA,GAAA/D,IAAA,QACAoB,EAAA0C,WAAAC,GAAA,GAAAnC,SACAR,EAAAM,OAAApL,KAAA0N,YACA5C,EAAAY,QAAA1L,KAAA2N,eACAlB,OAGA,QAAAD,GAAAoB,GACA,GAAAC,GAAA7N,KAAA8N,UACA1G,QAAA,oBAAA,MAAAA,QAAA,IAAA,MAEAwG,EAAAG,QAAAH,EAAAI,OAAA,IAEAJ,EAAAK,gBAAAL,EAAAK,iBACAL,EAAAM,aAAA,EAEAzD,EAAA0D,QAAA7E,EAAAtJ,MAAAsK,UAEAuD,EAAA,cAAAA,EAAAO,EACA,aAAAP,EAAAQ,EAAA7N,GAAAoN,GACAxB,IAEAkC,EAAAhC,GAAAiC,EAAA,SAAAX,GACAU,EAAAjC,IAAA,UACAC,GAAAkC,EAAA,SAAAZ,GACAC,EAAAD,GACAxB,OAIA,QAAAgC,GAAAxE,GACA,GAAAgE,GAAAjE,EAAAC,GACA6E,EAAAb,EAAAc,MAAAjE,EAAA0D,QAAAjD,KACAyD,EAAAf,EAAAgB,MAAAnE,EAAA0D,QAAA5C,GAEAY,GAAAhM,UACA2F,EAAA2I,EAAAxC,EAAAb,OAAA,IACArF,EAAA,IAAA4I,EAAA1C,EAAAP,QAAA,KACA,OAGA,QAAA2C,GAAAzE,GACA,GAAAiF,GAAAlF,EAAAC,GAAAgF,MAAAnE,EAAA0D,QAAA5C,GAEAY,GAAAhM,UAAAoD,EAAA,IAAAsL,EAAA3C,EAAAR,QAAA,KAAA,OAGA,QAAAlL,GAAAoJ,GACA,GAAA6E,GAAA9E,EAAAC,GAAA8E,MAAAjE,EAAA0D,QAAAjD,KACA1K,EAAAiO,EAAA1C,EAAAX,MAEAe,GAAAhM,YAAA,MAAAK,GAGA,QAAA4L,GAAA0C,GACA,GAAA1O,GAAA+L,EAAA/L,OACAgD,EAAAhD,EAAAgD,OAGA2L,GAFA3O,EAAAoC,IAAAtB,IACAd,EAAAoC,IAAAI,IACA0D,EAAAyI,MACAC,EAAA1I,EAAA0I,MACAC,EAAA9C,EAAAtF,SAAA4D,EAAAC,WAAApE,EAAAS,YACAmI,EAAA9O,EAAA8D,aAAA,IAAA6K,EAAAC,EACAG,EAAA/O,EAAAuB,aAAAG,UAAA,IAAAiN,EAAAC,EACAzL,GAAA,EAAAnD,EAAAkD,IAAAC,GAAA2I,EAAAR,QACA5F,EAAA1F,EAAAkD,IAAAwC,EAAAmG,EAAAb,OACArF,GAAA,EAAA3F,EAAAkD,IAAAyC,GAAAkG,EAAAP,QACAlG,EAAApF,EAAAI,MAAAuL,EAAAX,OACAgE,EAAAnC,EAAA,cAAA,GACAoC,EAAA5E,EAAA,GAAA7E,MACA0J,EAAA7E,EAAA,GAAA8E,aAAA,UACA,KAAAF,GAAAP,IAAA5O,CAEA+L,GAAAU,MACA6C,gBAAA,OACApM,EAAA9B,EAAA,IAAA8B,EAAA7B,EAAA,IAAA6B,EAAA5B,EAAA,KACA2L,EAAAR,MACA8C,UAAAL,EAAA,IAAAtJ,EAAA,OAAAC,EAAA,SACAmF,KAAA+B,EAAA,GAAAnH,EACAyF,IAAA0B,EAAA,GAAAlH,EACA2J,YAAAtP,EAAA6D,aAAA,IAAA8K,EAAAC,GAEA5B,EAAAT,MACA8C,UAAAL,EAAA,OAAA7L,EAAA,SACAgI,IAAA0B,EAAA,GAAA1J,EACAmM,YAAA,eAAAR,GAEAnD,EAAAY,MAAA6C,gBAAA,IAAApP,EAAA0C,KACAuK,EAAAV,MACA8C,UAAAL,EAAA,IAAA5J,EAAA,YACA0F,KAAA+B,EAAA,GAAAzH,EACAkK,YAAAP,EAAA,gBAEA1E,EAAAkC,MACA6C,gBAAAF,EAAA,GAAAL,EACA5O,MAAAiP,EAAA,GACAlP,EAAAqD,mBAAA3B,UAAA,IAAAiN,EAAAC,GAEAvE,EAAAkF,KAAAL,EAAA,GAAAD,IAAAJ,EAAAA,EAAA,GAEAH,IAAA5O,EAAA0P,EAAAd,GAAAe,EAAAD,GAQA,QAAAA,GAAAd,GACA7C,EAAAvC,IAAAuC,EAAAU,MACAQ,EAAAzD,IAAAyD,EAAAR,MACAS,EAAA1D,IAAA0D,EAAAT,MACAZ,EAAArC,IAAAqC,EAAAY,MACAU,EAAA3D,IAAA2D,EAAAV,MAEArG,EAAA4D,UAAAO,EAAAf,IAAAe,EAAAkC,MACAlC,EAAAkF,MAAAlF,EAAArG,IAAAqG,EAAAkF,MAEArJ,EAAAwJ,eAAA7E,KACAL,EACAH,EACA,iBAAAqE,GAAAA,EAAA5O,GAzPA,GAEA0K,GACAuB,EACA7F,EAEAmE,EAAAK,EACAoB,EAAAD,EACAkB,EAAAC,EAAArB,EAAAsB,EARAiB,EAAAhF,EAAAyG,UACA3O,EAAAkI,IASAkF,EAAA,8CACAjC,EAAA,+CACAgC,EAAA,yCACAtB,GAAA,EACA4C,EAAA5P,EAAA+P,uBACA/P,EAAAgQ,6BAAA,SAAAC,GAAAA,KACArD,EAAA,+PAKAF,EAAA,ynCAmBAwD,EAAA,SAAA9O,GACA8K,EAAAnM,KAAAK,MAAA,GAAAN,GAAAsB,GACAiF,EAAA6F,EAAA9K,QACAuJ,EAAA5K,KAGAmQ,GAAA1J,WACAmJ,OAAAxD,EACAjC,OAAAA,GA6MAb,EAAA8G,GAAAC,YAAA,SAAAhP,GACA,GAAAiP,GAAAtQ,KACAuQ,EAAA,YAsCA,OApCAlP,GAAAiI,EAAAkH,QACA1E,eAAA,IACAoB,KAAA,EACAhD,UAAA,EACAlI,SAAA,OACAgK,SAAA,EACA8D,eAAAS,EACAjD,cAAAiD,EACAvF,iBAAAuF,EACAE,KAAAV,SAAAU,KACAC,cAAA,EACAlG,IAAA,EACAuE,KAAA,OACAC,MAAA,QAMA3N,IAEAuJ,GAAAvJ,EAAAqP,cAAApH,EAAArJ,GACAqM,GAAA,wBAAA,WACA1B,EAAAC,UACAD,EAAAT,OAAAc,KAAAL,EAAAC,SAAA,IAAA,KAGAzJ,EAAAA,EAAAuP,IAAA3Q,MACAA,KAAAqQ,YAAAzF,GAAA,GAAAuF,GAAA9O,GACArB,KAAAqB,QAAAA,EAEAiI,EAAAjI,EAAAoP,MAAApE,IAAA,QAAAC,GAAAC,EAAA,SAAAqB,IACAxM,EAAAuP,IAAA7F,GAAAb,KAAA2D,EAAAgD,QACAD,IAAAvP,EAAAyP,OAAAjD,EAAAgD,SAAA,IAAAzG,MAGAnK,KAAAsM,GAAA,wBAAA,SAAA1C,GACAgB,EAAAvK,MAAAgB,QACAiI,EAAAkH,OAAA5F,EAAAvK,MAAAgB,QAAAiF,EAAAgK,EAAAjP,SACA8I,EAAAc,KAAAjL,KAAA4J,KAEA0C,GAAA,aAAA,WACAH,EAAAhM,SAAAH,KAAA4F,OAAA,QACA0K,EAAAD,YAAAT,QAAA,KAEAkB,KAAA,WACA,GAAAlL,GAAA2D,EAAAvJ,MACAyC,EAAAmD,EAAAyB,MAAA,KACA2C,EAAAD,EAAAT,EAAAtJ,MAEAgK,GAAAW,KAAA,YAAAlI,EAAA,GAAAA,EAAA,GAAA8E,OAAA,EAAA,GAAA,OACAwJ,KAAA,WAAAzK,EAAA0K,cACA3P,EAAA6I,UACAF,EAAAN,KAAAuH,mBAAArL,EACAvF,MAAA,WACA,MAAA8L,GAAAhM,SAAAyF,GACAnC,mBAAA3B,UAAA,IACAT,EAAA0N,KAAA1N,EAAA2N,YAMA1F,EAAA8G,GAAAC,YAAAa,QAAA,WACA5H,EAAA,KAAA+C,IAAA,QACAzB,EAAAT,QAAA,GACA/I,EAAAkI,OChVA,SAAAA,GACAA,EAAA,WACAA,EAAA,qBAAA+G,iBAEAhH","file":"colorpicker.min.js","sourcesContent":["(function (root, factory) {\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory(root);\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine('colors', [], function () {\n\t\t\treturn factory(root);\n\t\t});\n\t} else {\n\t\troot.Colors = factory(root);\n\t}\n}(this, function(window, undefined) {\n\t\"use strict\"\n\n\tvar _valueRanges = {\n\t\t\trgb:   {r: [0, 255], g: [0, 255], b: [0, 255]},\n\t\t\thsv:   {h: [0, 360], s: [0, 100], v: [0, 100]},\n\t\t\thsl:   {h: [0, 360], s: [0, 100], l: [0, 100]},\n\t\t\talpha: {alpha: [0, 1]},\n\t\t\tHEX:   {HEX: [0, 16777215]} // maybe we don't need this\n\t\t},\n\n\t\t_Math = window.Math,\n\t\t_round = _Math.round,\n\n\t\t_instance = {},\n\t\t_colors = {},\n\n\t\tgrey = {r: 0.298954, g: 0.586434, b: 0.114612}, // CIE-XYZ 1931\n\t\tluminance = {r: 0.2126, g: 0.7152, b: 0.0722}, // W3C 2.0\n\n\t\tColors = function(options) {\n\t\t\tthis.colors = {RND: {}};\n\t\t\tthis.options = {\n\t\t\t\tcolor: 'rgba(0,0,0,0)', // init value(s)...\n\t\t\t\tgrey: grey,\n\t\t\t\tluminance: luminance,\n\t\t\t\tvalueRanges: _valueRanges\n\t\t\t\t// customBG: '#808080'\n\t\t\t\t// convertCallback: undefined,\n\t\t\t\t// allMixDetails: false\n\t\t\t};\n\t\t\tinitInstance(this, options || {});\n\t\t},\n\t\tinitInstance = function(THIS, options) {\n\t\t\tvar importColor,\n\t\t\t\t_options = THIS.options,\n\t\t\t\tcustomBG;\n\n\t\t\tfocusInstance(THIS);\n\t\t\tfor (var option in options) {\n\t\t\t\tif (options[option] !== undefined) _options[option] = options[option];\n\t\t\t}\n\t\t\tcustomBG = _options.customBG;\n\t\t\t_options.customBG = (typeof customBG === 'string') ? ColorConverter.txt2color(customBG).rgb : customBG;\n\t\t\t_colors = setColor(THIS.colors, _options.color, undefined, true); // THIS.colors = _colors = \n\t\t},\n\t\tfocusInstance = function(THIS) {\n\t\t\tif (_instance !== THIS) {\n\t\t\t\t_instance = THIS;\n\t\t\t\t_colors = THIS.colors;\n\t\t\t}\n\t\t};\n\n\tColors.prototype.setColor = function(newCol, type, alpha) {\n\t\tfocusInstance(this);\n\t\tif (newCol) {\n\t\t\treturn setColor(this.colors, newCol, type, undefined, alpha);\n\t\t} else {\n\t\t\tif (alpha !== undefined) {\n\t\t\t\tthis.colors.alpha = limitValue(alpha, 0, 1);\n\t\t\t}\n\t\t\treturn convertColors(type);\n\t\t}\n\t};\n\n\tColors.prototype.setCustomBackground = function(col) { // wild gues,... check again...\n\t\tfocusInstance(this); // needed???\n\t\tthis.options.customBG = (typeof col === 'string') ? ColorConverter.txt2color(col).rgb : col;\n\t\t// return setColor(this.colors, this.options.customBG, 'rgb', true); // !!!!RGB\n\t\treturn setColor(this.colors, undefined, 'rgb'); // just recalculate existing\n\t};\n\n\tColors.prototype.saveAsBackground = function() { // alpha\n\t\tfocusInstance(this); // needed???\n\t\t// return setColor(this.colors, this.colors.RND.rgb, 'rgb', true);\n\t\treturn setColor(this.colors, undefined, 'rgb', true);\n\t};\n\n\tColors.prototype.toString = function(colorMode, forceAlpha) {\n\t\treturn ColorConverter.color2text((colorMode || 'rgb').toLowerCase(), this.colors, forceAlpha);\n\t};\n\n\t// ------------------------------------------------------ //\n\t// ---------- Color calculation related stuff  ---------- //\n\t// -------------------------------------------------------//\n\n\tfunction setColor(colors, color, type, save, alpha) { // color only full range\n\t\tif (typeof color === 'string') {\n\t\t\tvar color = ColorConverter.txt2color(color); // new object\n\t\t\ttype = color.type;\n\t\t\t_colors[type] = color[type];\n\t\t\talpha = alpha !== undefined ? alpha : color.alpha;\n\t\t} else if (color) {\n\t\t\tfor (var n in color) {\n\t\t\t\tcolors[type][n] = limitValue(color[n] / _valueRanges[type][n][1], 0 , 1);\n\t\t\t}\n\t\t}\n\t\tif (alpha !== undefined) {\n\t\t\tcolors.alpha = limitValue(+alpha, 0, 1);\n\t\t}\n\t\treturn convertColors(type, save ? colors : undefined);\n\t}\n\n\tfunction saveAsBackground(RGB, rgb, alpha) {\n\t\tvar grey = _instance.options.grey,\n\t\t\tcolor = {};\n\n\t\tcolor.RGB = {r: RGB.r, g: RGB.g, b: RGB.b};\n\t\tcolor.rgb = {r: rgb.r, g: rgb.g, b: rgb.b};\n\t\tcolor.alpha = alpha;\n\t\t// color.RGBLuminance = getLuminance(RGB);\n\t\tcolor.equivalentGrey = _round(grey.r * RGB.r + grey.g * RGB.g + grey.b * RGB.b);\n\n\t\tcolor.rgbaMixBlack = mixColors(rgb, {r: 0, g: 0, b: 0}, alpha, 1);\n\t\tcolor.rgbaMixWhite = mixColors(rgb, {r: 1, g: 1, b: 1}, alpha, 1);\n\t\tcolor.rgbaMixBlack.luminance = getLuminance(color.rgbaMixBlack, true);\n\t\tcolor.rgbaMixWhite.luminance = getLuminance(color.rgbaMixWhite, true);\n\n\t\tif (_instance.options.customBG) {\n\t\t\tcolor.rgbaMixCustom = mixColors(rgb, _instance.options.customBG, alpha, 1);\n\t\t\tcolor.rgbaMixCustom.luminance = getLuminance(color.rgbaMixCustom, true);\n\t\t\t_instance.options.customBG.luminance = getLuminance(_instance.options.customBG, true);\n\t\t}\n\n\t\treturn color;\n\t}\n\n\tfunction convertColors(type, colorObj) {\n\t\t// console.time('convertColors');\n\t\tvar colors = colorObj || _colors,\n\t\t\tconvert = ColorConverter,\n\t\t\toptions = _instance.options,\n\t\t\tranges = _valueRanges,\n\t\t\tRND = colors.RND,\n\t\t\t// type = colorType, // || _mode.type,\n\t\t\tmodes, mode = '', from = '', // value = '',\n\t\t\texceptions = {hsl: 'hsv', rgb: type},\n\t\t\tRGB = RND.rgb, SAVE, SMART;\n\n\t\tif (type !== 'alpha') {\n\t\t\tfor (var typ in ranges) {\n\t\t\t\tif (!ranges[typ][typ]) { // no alpha|HEX\n\t\t\t\t\tif (type !== typ) {\n\t\t\t\t\t\tfrom = exceptions[typ] || 'rgb';\n\t\t\t\t\t\tcolors[typ] = convert[from + '2' + typ](colors[from]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!RND[typ]) RND[typ] = {};\n\t\t\t\t\tmodes = colors[typ];\n\t\t\t\t\tfor(mode in modes) {\n\t\t\t\t\t\tRND[typ][mode] = _round(modes[mode] * ranges[typ][mode][1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tRGB = RND.rgb;\n\t\t\tcolors.HEX = convert.RGB2HEX(RGB);\n\t\t\tcolors.equivalentGrey =\n\t\t\t\toptions.grey.r * colors.rgb.r +\n\t\t\t\toptions.grey.g * colors.rgb.g +\n\t\t\t\toptions.grey.b * colors.rgb.b;\n\t\t\tcolors.webSave = SAVE = getClosestWebColor(RGB, 51);\n\t\t\t// colors.webSave.HEX = convert.RGB2HEX(colors.webSave);\n\t\t\tcolors.webSmart = SMART = getClosestWebColor(RGB, 17);\n\t\t\t// colors.webSmart.HEX = convert.RGB2HEX(colors.webSmart);\n\t\t\tcolors.saveColor =\n\t\t\t\tRGB.r === SAVE.r && RGB.g === SAVE.g && RGB.b === SAVE.b  ? 'web save' :\n\t\t\t\tRGB.r === SMART.r && RGB.g === SMART.g && RGB.b === SMART.b  ? 'web smart' : '';\n\t\t\tcolors.hueRGB = ColorConverter.hue2RGB(colors.hsv.h);\n\n\t\t\tif (colorObj) {\n\t\t\t\tcolors.background = saveAsBackground(RGB, colors.rgb, colors.alpha);\n\t\t\t}\n\t\t} // else RGB = RND.rgb;\n\n\t\tvar rgb = colors.rgb, // for better minification...\n\t\t\talpha = colors.alpha,\n\t\t\tluminance = 'luminance',\n\t\t\tbackground = colors.background,\n\t\t\trgbaMixBlack, rgbaMixWhite, rgbaMixCustom, \n\t\t\trgbaMixBG, rgbaMixBGMixBlack, rgbaMixBGMixWhite, rgbaMixBGMixCustom;\n\n\t\trgbaMixBlack = mixColors(rgb, {r: 0, g: 0, b: 0}, alpha, 1);\n\t\trgbaMixBlack[luminance] = getLuminance(rgbaMixBlack, true);\n\t\tcolors.rgbaMixBlack = rgbaMixBlack;\n\n\t\trgbaMixWhite = mixColors(rgb, {r: 1, g: 1, b: 1}, alpha, 1);\n\t\trgbaMixWhite[luminance] = getLuminance(rgbaMixWhite, true);\n\t\tcolors.rgbaMixWhite = rgbaMixWhite;\n\n\t\tif (options.customBG) {\n\t\t\trgbaMixBGMixCustom = mixColors(rgb, background.rgbaMixCustom, alpha, 1);\n\t\t\trgbaMixBGMixCustom[luminance] = getLuminance(rgbaMixBGMixCustom, true);\n\t\t\trgbaMixBGMixCustom.WCAG2Ratio = getWCAG2Ratio(rgbaMixBGMixCustom[luminance],\n\t\t\t\tbackground.rgbaMixCustom[luminance]);\n\t\t\tcolors.rgbaMixBGMixCustom = rgbaMixBGMixCustom;\n\t\t\t/* ------ */\n\t\t\trgbaMixBGMixCustom.luminanceDelta = _Math.abs(\n\t\t\t\trgbaMixBGMixCustom[luminance] - background.rgbaMixCustom[luminance]);\n\t\t\trgbaMixBGMixCustom.hueDelta = getHueDelta(background.rgbaMixCustom, rgbaMixBGMixCustom, true);\n\t\t\t/* ------ */\n\t\t}\n\n\t\tcolors.RGBLuminance = getLuminance(RGB);\n\t\tcolors.HUELuminance = getLuminance(colors.hueRGB);\n\n\t\t// renderVars.readyToRender = true;\n\t\tif (options.convertCallback) {\n\t\t\toptions.convertCallback(colors, type); //, convert); //, _mode);\n\t\t}\n\n\t\t// console.timeEnd('convertColors')\n\t\t// if (colorObj)\n\t\treturn colors;\n\t}\n\n\n\t// ------------------------------------------------------ //\n\t// ------------------ color conversion ------------------ //\n\t// -------------------------------------------------------//\n\n\tvar ColorConverter = {\n\t\ttxt2color: function(txt) {\n\t\t\tvar color = {},\n\t\t\t\tparts = txt.replace(/(?:#|\\)|%)/g, '').split('('),\n\t\t\t\tvalues = (parts[1] || '').split(/,\\s*/),\n\t\t\t\ttype = parts[1] ? parts[0].substr(0, 3) : 'rgb',\n\t\t\t\tm = '';\n\n\t\t\tcolor.type = type;\n\t\t\tcolor[type] = {};\n\t\t\tif (parts[1]) {\n\t\t\t\tfor (var n = 3; n--; ) {\n\t\t\t\t\tm = type[n] || type.charAt(n); // IE7\n\t\t\t\t\tcolor[type][m] = +values[n] / _valueRanges[type][m][1];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolor.rgb = ColorConverter.HEX2rgb(parts[0]);\n\t\t\t}\n\t\t\t// color.color = color[type];\n\t\t\tcolor.alpha = values[3] ? +values[3] : 1;\n\n\t\t\treturn color;\n\t\t},\n\n\t\tcolor2text: function(colorMode, colors, forceAlpha) {\n\t\t\tvar alpha = forceAlpha !== false && _round(colors.alpha * 100) / 100,\n\t\t\t\thasAlpha = typeof alpha === 'number' &&\n\t\t\t\t\tforceAlpha !== false && (forceAlpha || alpha !== 1),\n\t\t\t\tRGB = colors.RND.rgb,\n\t\t\t\tHSL = colors.RND.hsl,\n\t\t\t\tshouldBeHex = colorMode === 'hex' && hasAlpha,\n\t\t\t\tisHex = colorMode === 'hex' && !shouldBeHex,\n\t\t\t\tisRgb = colorMode === 'rgb' || shouldBeHex,\n\t\t\t\tinnerText = isRgb ? RGB.r + ', ' + RGB.g + ', ' + RGB.b :\n\t\t\t\t\t!isHex ? HSL.h + ', ' + HSL.s + '%, ' + HSL.l + '%' :\n\t\t\t\t\t'#' + colors.HEX;\n\n\t\t\treturn isHex ? innerText : (shouldBeHex ? 'rgb' : colorMode) + \n\t\t\t\t(hasAlpha ? 'a' : '') + '(' + innerText +\n\t\t\t\t(hasAlpha ? ', ' + alpha : '') + ')';\n\t\t},\n\n\t\tRGB2HEX: function(RGB) {\n\t\t\treturn (\n\t\t\t\t(RGB.r < 16 ? '0' : '') + RGB.r.toString(16) +\n\t\t\t\t(RGB.g < 16 ? '0' : '') + RGB.g.toString(16) +\n\t\t\t\t(RGB.b < 16 ? '0' : '') + RGB.b.toString(16)\n\t\t\t).toUpperCase();\n\t\t},\n\n\t\tHEX2rgb: function(HEX) {\n\t\t\tHEX = HEX.split(''); // IE7\n\t\t\treturn {\n\t\t\t\tr: +('0x' + HEX[0] + HEX[HEX[3] ? 1 : 0]) / 255,\n\t\t\t\tg: +('0x' + HEX[HEX[3] ? 2 : 1] + (HEX[3] || HEX[1])) / 255,\n\t\t\t\tb: +('0x' + (HEX[4] || HEX[2]) + (HEX[5] || HEX[2])) / 255\n\t\t\t};\n\t\t},\n\n\t\thue2RGB: function(hue) {\n\t\t\tvar h = hue * 6,\n\t\t\t\tmod = ~~h % 6, // _Math.floor(h) -> faster in most browsers\n\t\t\t\ti = h === 6 ? 0 : (h - mod);\n\n\t\t\treturn {\n\t\t\t\tr: _round([1, 1 - i, 0, 0, i, 1][mod] * 255),\n\t\t\t\tg: _round([i, 1, 1, 1 - i, 0, 0][mod] * 255),\n\t\t\t\tb: _round([0, 0, i, 1, 1, 1 - i][mod] * 255)\n\t\t\t};\n\t\t},\n\n\t\t// ------------------------ HSV ------------------------ //\n\n\t\trgb2hsv: function(rgb) { // faster\n\t\t\tvar r = rgb.r,\n\t\t\t\tg = rgb.g,\n\t\t\t\tb = rgb.b,\n\t\t\t\tk = 0, chroma, min, s;\n\n\t\t\tif (g < b) {\n\t\t\t\tg = b + (b = g, 0);\n\t\t\t\tk = -1;\n\t\t\t}\n\t\t\tmin = b;\n\t\t\tif (r < g) {\n\t\t\t\tr = g + (g = r, 0);\n\t\t\t\tk = -2 / 6 - k;\n\t\t\t\tmin = _Math.min(g, b); // g < b ? g : b; ???\n\t\t\t}\n\t\t\tchroma = r - min;\n\t\t\ts = r ? (chroma / r) : 0;\n\t\t\treturn {\n\t\t\t\th: s < 1e-15 ? ((_colors && _colors.hsl && _colors.hsl.h) || 0) :\n\t\t\t\t\tchroma ? _Math.abs(k + (g - b) / (6 * chroma)) : 0,\n\t\t\t\ts: r ? (chroma / r) : ((_colors && _colors.hsv && _colors.hsv.s) || 0), // ??_colors.hsv.s || 0\n\t\t\t\tv: r\n\t\t\t};\n\t\t},\n\n\t\thsv2rgb: function(hsv) {\n\t\t\tvar h = hsv.h * 6,\n\t\t\t\ts = hsv.s,\n\t\t\t\tv = hsv.v,\n\t\t\t\ti = ~~h, // _Math.floor(h) -> faster in most browsers\n\t\t\t\tf = h - i,\n\t\t\t\tp = v * (1 - s),\n\t\t\t\tq = v * (1 - f * s),\n\t\t\t\tt = v * (1 - (1 - f) * s),\n\t\t\t\tmod = i % 6;\n\n\t\t\treturn {\n\t\t\t\tr: [v, q, p, p, t, v][mod],\n\t\t\t\tg: [t, v, v, q, p, p][mod],\n\t\t\t\tb: [p, p, t, v, v, q][mod]\n\t\t\t};\n\t\t},\n\n\t\t// ------------------------ HSL ------------------------ //\n\n\t\thsv2hsl: function(hsv) {\n\t\t\tvar l = (2 - hsv.s) * hsv.v,\n\t\t\t\ts = hsv.s * hsv.v;\n\n\t\t\ts = !hsv.s ? 0 : l < 1 ? (l ? s / l : 0) : s / (2 - l);\n\n\t\t\treturn {\n\t\t\t\th: hsv.h,\n\t\t\t\ts: !hsv.v && !s ? ((_colors && _colors.hsl && _colors.hsl.s) || 0) : s, // ???\n\t\t\t\tl: l / 2\n\t\t\t};\n\t\t},\n\n\t\trgb2hsl: function(rgb, dependent) { // not used in Color\n\t\t\tvar hsv = ColorConverter.rgb2hsv(rgb);\n\n\t\t\treturn ColorConverter.hsv2hsl(dependent ? hsv : (_colors.hsv = hsv));\n\t\t},\n\n\t\thsl2rgb: function(hsl) {\n\t\t\tvar h = hsl.h * 6,\n\t\t\t\ts = hsl.s,\n\t\t\t\tl = hsl.l,\n\t\t\t\tv = l < 0.5 ? l * (1 + s) : (l + s) - (s * l),\n\t\t\t\tm = l + l - v,\n\t\t\t\tsv = v ? ((v - m) / v) : 0,\n\t\t\t\tsextant = ~~h, // _Math.floor(h) -> faster in most browsers\n\t\t\t\tfract = h - sextant,\n\t\t\t\tvsf = v * sv * fract,\n\t\t\t\tt = m + vsf,\n\t\t\t\tq = v - vsf,\n\t\t\t\tmod = sextant % 6;\n\n\t\t\treturn {\n\t\t\t\tr: [v, q, m, m, t, v][mod],\n\t\t\t\tg: [t, v, v, q, m, m][mod],\n\t\t\t\tb: [m, m, t, v, v, q][mod]\n\t\t\t};\n\t\t}\n\t};\n\n\t// ------------------------------------------------------ //\n\t// ------------------ helper functions ------------------ //\n\t// -------------------------------------------------------//\n\n\tfunction getClosestWebColor(RGB, val) {\n\t\tvar out = {},\n\t\t\ttmp = 0,\n\t\t\thalf = val / 2;\n\n\t\tfor (var n in RGB) {\n\t\t\ttmp = RGB[n] % val; // 51 = 'web save', 17 = 'web smart'\n\t\t\tout[n] = RGB[n] + (tmp > half ? val - tmp : -tmp);\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction getHueDelta(rgb1, rgb2, nominal) {\n\t\treturn (_Math.max(rgb1.r - rgb2.r, rgb2.r - rgb1.r) +\n\t\t\t\t_Math.max(rgb1.g - rgb2.g, rgb2.g - rgb1.g) +\n\t\t\t\t_Math.max(rgb1.b - rgb2.b, rgb2.b - rgb1.b)) * (nominal ? 255 : 1) / 765;\n\t}\n\n\tfunction getLuminance(rgb, normalized) {\n\t\tvar div = normalized ? 1 : 255,\n\t\t\tRGB = [rgb.r / div, rgb.g / div, rgb.b / div],\n\t\t\tluminance = _instance.options.luminance;\n\n\t\tfor (var i = RGB.length; i--; ) {\n\t\t\tRGB[i] = RGB[i] <= 0.03928 ? RGB[i] / 12.92 : _Math.pow(((RGB[i] + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn ((luminance.r * RGB[0]) + (luminance.g * RGB[1]) + (luminance.b * RGB[2]));\n\t}\n\n\tfunction mixColors(topColor, bottomColor, topAlpha, bottomAlpha) {\n\t\tvar newColor = {},\n\t\t\talphaTop = (topAlpha !== undefined ? topAlpha : 1),\n\t\t\talphaBottom = (bottomAlpha !== undefined ? bottomAlpha : 1),\n\t\t\talpha = alphaTop + alphaBottom * (1 - alphaTop); // 1 - (1 - alphaTop) * (1 - alphaBottom);\n\n\t\tfor(var n in topColor) {\n\t\t\tnewColor[n] = (topColor[n] * alphaTop + bottomColor[n] * alphaBottom * (1 - alphaTop)) / alpha;\n\t\t}\n\t\tnewColor.a = alpha;\n\t\treturn newColor;\n\t}\n\n\tfunction getWCAG2Ratio(lum1, lum2) {\n\t\tvar ratio = 1;\n\n\t\tif (lum1 >= lum2) {\n\t\t\tratio = (lum1 + 0.05) / (lum2 + 0.05);\n\t\t} else {\n\t\t\tratio = (lum2 + 0.05) / (lum1 + 0.05);\n\t\t}\n\t\treturn _round(ratio * 100) / 100;\n\t}\n\n\tfunction limitValue(value, min, max) {\n\t\t// return _Math.max(min, _Math.min(max, value)); // faster??\n\t\treturn (value > max ? max : value < min ? min : value);\n\t}\n\n\treturn Colors;\n}));","(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory(root, require('jquery'), require('colors'));\n    } else if (typeof define === 'function' && define.amd) {\n        define(['jquery', 'colors'], function (jQuery, Colors) {\n            return factory(root, jQuery, Colors);\n        });\n    } else {\n        factory(root, root.jQuery, root.Colors);\n    }\n}(this, function(window, $, Colors, undefined){\n    'use strict';\n\n    var $document = $(document),\n        _instance = $(),\n        _colorPicker,\n        _color,\n        _options,\n\n        _$trigger, _$UI,\n        _$z_slider, _$xy_slider,\n        _$xy_cursor, _$z_cursor , _$alpha , _$alpha_cursor,\n\n        _pointermove = 'touchmove.tcp mousemove.tcp pointermove.tcp',\n        _pointerdown = 'touchstart.tcp mousedown.tcp pointerdown.tcp',\n        _pointerup = 'touchend.tcp mouseup.tcp pointerup.tcp',\n        _GPU = false,\n        _animate = window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame || function(cb){cb()},\n        _html = '<div class=\"cp-color-picker\"><div class=\"cp-z-slider\"><div c' +\n            'lass=\"cp-z-cursor\"></div></div><div class=\"cp-xy-slider\"><div cl' +\n            'ass=\"cp-white\"></div><div class=\"cp-xy-cursor\"></div></div><div ' +\n            'class=\"cp-alpha\"><div class=\"cp-alpha-cursor\"></div></div></div>',\n            // 'grunt-contrib-uglify' puts all this back to one single string...\n        _css = '.cp-color-picker{position:absolute;overflow:hidden;padding:6p' +\n            'x 6px 0;background-color:#444;color:#bbb;font-family:Arial,Helve' +\n            'tica,sans-serif;font-size:12px;font-weight:400;cursor:default;bo' +\n            'rder-radius:5px}.cp-color-picker>div{position:relative;overflow:' +\n            'hidden}.cp-xy-slider{float:left;height:128px;width:128px;margin-' +\n            'bottom:6px;background:linear-gradient(to right,#FFF,rgba(255,255' +\n            ',255,0))}.cp-white{height:100%;width:100%;background:linear-grad' +\n            'ient(rgba(0,0,0,0),#000)}.cp-xy-cursor{position:absolute;top:0;w' +\n            'idth:10px;height:10px;margin:-5px;border:1px solid #fff;border-r' +\n            'adius:100%;box-sizing:border-box}.cp-z-slider{float:right;margin' +\n            '-left:6px;height:128px;width:20px;background:linear-gradient(red' +\n            ' 0,#f0f 17%,#00f 33%,#0ff 50%,#0f0 67%,#ff0 83%,red 100%)}.cp-z-' +\n            'cursor{position:absolute;margin-top:-4px;width:100%;border:4px s' +\n            'olid #fff;border-color:transparent #fff;box-sizing:border-box}.c' +\n            'p-alpha{clear:both;width:100%;height:16px;margin:6px 0;backgroun' +\n            'd:linear-gradient(to right,#444,rgba(0,0,0,0))}.cp-alpha-cursor{' +\n            'position:absolute;margin-left:-4px;height:100%;border:4px solid ' +\n            '#fff;border-color:#fff transparent;box-sizing:border-box}',\n\n        ColorPicker = function(options) {\n            _color = this.color = new Colors(options);\n            _options = _color.options;\n            _colorPicker = this;\n        };\n\n    ColorPicker.prototype = {\n        render: preRender,\n        toggle: toggle\n    };\n\n    function extractValue(elm) {\n        return elm.value || elm.getAttribute('value') ||\n            $(elm).css('background-color') || '#FFF';\n    }\n\n    function resolveEventType(event) {\n        event = event.originalEvent && event.originalEvent.touches ?\n            event.originalEvent.touches[0] : event;\n\n        return event.originalEvent ? event.originalEvent : event;\n    }\n\n    function findElement($elm) {\n        return $($elm.find(_options.doRender)[0] || $elm[0]);\n    }\n\n    function toggle(event) {\n        var $this = $(this),\n            position = $this.offset(),\n            $window = $(window),\n            gap = _options.gap;\n\n        if (event) {\n            _$trigger = findElement($this);\n            _$trigger._colorMode = _$trigger.data('colorMode');\n\n            _colorPicker.$trigger = $this;\n\n            (_$UI || build()).css(\n                _options.positionCallback.call(_colorPicker, $this) ||\n                {'left': (_$UI._left = position.left) -\n                    ((_$UI._left += _$UI._width -\n                    ($window.scrollLeft() + $window.width())) + gap > 0 ?\n                    _$UI._left + gap : 0),\n                'top': (_$UI._top = position.top + $this.outerHeight()) -\n                    ((_$UI._top += _$UI._height -\n                    ($window.scrollTop() + $window.height())) + gap > 0 ?\n                    _$UI._top + gap : 0)\n            }).show(_options.animationSpeed, function() {\n                if (event === true) { // resize, scroll\n                    return;\n                }\n                _$alpha.toggle(!!_options.opacity)._width = _$alpha.width();\n                _$xy_slider._width = _$xy_slider.width();\n                _$xy_slider._height = _$xy_slider.height();\n                _$z_slider._height = _$z_slider.height();\n                _color.setColor(extractValue(_$trigger[0]));\n\n                preRender(true);\n            })\n            .off('.tcp').on(_pointerdown,\n                '.cp-xy-slider,.cp-z-slider,.cp-alpha', pointerdown);\n        } else if (_colorPicker.$trigger) {\n            $(_$UI).hide(_options.animationSpeed, function() {\n                preRender(false);\n                _colorPicker.$trigger = null;\n            }).off('.tcp');\n        }\n    }\n\n    function build() {\n        $('head').append('<style type=\"text/css\" id=\"tinyColorPickerStyles\">' +\n            (_options.css || _css) + (_options.cssAddon || '') + '</style>');\n\n        return $(_html).css({'margin': _options.margin})\n            .appendTo('body')\n            .show(0, function() {\n                _colorPicker.$UI = _$UI = $(this);\n\n                _GPU = _options.GPU && _$UI.css('perspective') !== undefined;\n                _$z_slider = $('.cp-z-slider', this);\n                _$xy_slider = $('.cp-xy-slider', this);\n                _$xy_cursor = $('.cp-xy-cursor', this);\n                _$z_cursor = $('.cp-z-cursor', this);\n                _$alpha = $('.cp-alpha', this);\n                _$alpha_cursor = $('.cp-alpha-cursor', this);\n                _options.buildCallback.call(_colorPicker, _$UI);\n                _$UI.prepend('<div>').children().eq(0).css('width',\n                    _$UI.children().eq(0).width()); // stabilizer\n                _$UI._width = this.offsetWidth;\n                _$UI._height = this.offsetHeight;\n            }).hide();\n    }\n\n    function pointerdown(e) {\n        var action = this.className\n                .replace(/cp-(.*?)(?:\\s*|$)/, '$1').replace('-', '_');\n\n        if ((e.button || e.which) > 1) return;\n\n        e.preventDefault && e.preventDefault();\n        e.returnValue = false;\n\n        _$trigger._offset = $(this).offset();\n\n        (action = action === 'xy_slider' ? xy_slider :\n            action === 'z_slider' ? z_slider : alpha)(e);\n        preRender();\n\n        $document.on(_pointerup, function(e) {\n            $document.off('.tcp');\n        }).on(_pointermove, function(e) {\n            action(e);\n            preRender();\n        });\n    }\n\n    function xy_slider(event) {\n        var e = resolveEventType(event),\n            x = e.pageX - _$trigger._offset.left,\n            y = e.pageY - _$trigger._offset.top;\n\n        _color.setColor({\n            s: x / _$xy_slider._width * 100,\n            v: 100 - (y / _$xy_slider._height * 100)\n        }, 'hsv');\n    }\n\n    function z_slider(event) {\n        var z = resolveEventType(event).pageY - _$trigger._offset.top;\n\n        _color.setColor({h: 360 - (z / _$z_slider._height * 360)}, 'hsv');\n    }\n\n    function alpha(event) {\n        var x = resolveEventType(event).pageX - _$trigger._offset.left,\n            alpha = x / _$alpha._width;\n\n        _color.setColor({}, 'rgb', alpha);\n    }\n\n    function preRender(toggled) {\n        var colors = _color.colors,\n            hueRGB = colors.hueRGB,\n            RGB = colors.RND.rgb,\n            HSL = colors.RND.hsl,\n            dark = _options.dark,\n            light = _options.light,\n            colorText = _color.toString(_$trigger._colorMode, _options.forceAlpha),\n            HUEContrast = colors.HUELuminance > 0.22 ? dark : light,\n            alphaContrast = colors.rgbaMixBlack.luminance > 0.22 ? dark : light,\n            h = (1 - colors.hsv.h) * _$z_slider._height,\n            s = colors.hsv.s * _$xy_slider._width,\n            v = (1 - colors.hsv.v) * _$xy_slider._height,\n            a = colors.alpha * _$alpha._width,\n            translate3d = _GPU ? 'translate3d' : '',\n            triggerValue = _$trigger[0].value,\n            hasNoValue = _$trigger[0].hasAttribute('value') && // question this\n                triggerValue === '' && toggled !== undefined;\n\n        _$xy_slider._css = {\n            backgroundColor: 'rgb(' +\n                hueRGB.r + ',' + hueRGB.g + ',' + hueRGB.b + ')'};\n        _$xy_cursor._css = {\n            transform: translate3d + '(' + s + 'px, ' + v + 'px, 0)',\n            left: !_GPU ? s : '',\n            top: !_GPU ? v : '',\n            borderColor : colors.RGBLuminance > 0.22 ? dark : light\n        };\n        _$z_cursor._css = {\n            transform: translate3d + '(0, ' + h + 'px, 0)',\n            top: !_GPU ? h : '',\n            borderColor : 'transparent ' + HUEContrast\n        };\n        _$alpha._css = {backgroundColor: '#' + colors.HEX};\n        _$alpha_cursor._css = {\n            transform: translate3d + '(' + a + 'px, 0, 0)',\n            left: !_GPU ? a : '',\n            borderColor : alphaContrast + ' transparent'\n        };\n        _$trigger._css = {\n            backgroundColor : hasNoValue ? '' : colorText,\n            color: hasNoValue ? '' :\n                colors.rgbaMixBGMixCustom.luminance > 0.22 ? dark : light\n        };\n        _$trigger.text = hasNoValue ? '' : triggerValue !== colorText ? colorText : '';\n\n        toggled !== undefined ? render(toggled) : _animate(render);\n    }\n\n    // As _animate() is actually requestAnimationFrame(), render() gets called\n    // decoupled from any pointer action (whenever the browser decides to do\n    // so) as an event. preRender() is coupled to toggle() and all pointermove\n    // actions; that's where all the calculations happen. render() can now be\n    // called without extra calculations which results in faster rendering.\n    function render(toggled) {\n        _$xy_slider.css(_$xy_slider._css);\n        _$xy_cursor.css(_$xy_cursor._css);\n        _$z_cursor.css(_$z_cursor._css);\n        _$alpha.css(_$alpha._css);\n        _$alpha_cursor.css(_$alpha_cursor._css);\n\n        _options.doRender && _$trigger.css(_$trigger._css);\n        _$trigger.text && _$trigger.val(_$trigger.text);\n\n        _options.renderCallback.call(\n            _colorPicker,\n            _$trigger,\n            typeof toggled === 'boolean' ? toggled : undefined\n        );\n    }\n\n    $.fn.colorPicker = function(options) {\n        var _this = this,\n            noop = function(){};\n\n        options = $.extend({\n            animationSpeed: 150,\n            GPU: true,\n            doRender: true,\n            customBG: '#FFF',\n            opacity: true,\n            renderCallback: noop,\n            buildCallback: noop,\n            positionCallback: noop,\n            body: document.body,\n            scrollResize: true,\n            gap: 4,\n            dark: '#222',\n            light: '#DDD'\n            // forceAlpha: undefined,\n            // css: '',\n            // cssAddon: '',\n            // margin: '',\n            // preventFocus: false\n        }, options);\n\n        !_colorPicker && options.scrollResize && $(window)\n        .on('resize.tcp scroll.tcp', function() {\n            if (_colorPicker.$trigger) {\n                _colorPicker.toggle.call(_colorPicker.$trigger[0], true);\n            }\n        });\n        _instance = _instance.add(this);\n        this.colorPicker = _colorPicker || new ColorPicker(options);\n        this.options = options;\n\n        $(options.body).off('.tcp').on(_pointerdown, function(e) {\n            !_instance.add(_$UI).find(e.target)\n                .add(_instance.filter(e.target))[0] && toggle();\n        });\n\n        return this.on('focusin.tcp click.tcp', function(event) {\n            _colorPicker.color.options = // swap options to fake new instance\n                $.extend(_colorPicker.color.options, _options = _this.options);\n            toggle.call(this, event);\n        })\n        .on('change.tcp', function() {\n            _color.setColor(this.value || '#FFF');\n            _this.colorPicker.render(true);\n        })\n        .each(function() {\n            var value = extractValue(this),\n                mode = value.split('('),\n                $elm = findElement($(this));\n\n            $elm.data('colorMode', mode[1] ? mode[0].substr(0, 3) : 'HEX')\n                .attr('readonly', _options.preventFocus);\n            options.doRender &&\n            $elm.css({'background-color': value,\n                'color': function() {\n                    return _color.setColor(value)\n                        .rgbaMixBGMixCustom.luminance > 0.22 ?\n                        options.dark : options.light\n                }\n            });\n        });\n    };\n\n    $.fn.colorPicker.destroy = function() {\n        $('*').off('.tcp'); // slower but saver\n        _colorPicker.toggle(false);\n        _instance = $();\n        // destroy _colorPicker\n    };\n\n}));","(function($) {\n    $(function() {\n        $('.uhsp-colorpicker').colorPicker();\n    });\n})(jQuery);"],"sourceRoot":"/source/"}